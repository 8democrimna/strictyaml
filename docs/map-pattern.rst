Map Pattern
-----------

When you do not wish to let the user define the key
names in a mapping and and only specify what type the
keys are, use a MapPattern.

When you wish to specify the exact key name, use the
'Map' validator instead.




invalid_sequence_2.yaml:

.. code-block:: yaml
  a: a
  b: 2


valid_sequence_3.yaml:

.. code-block:: yaml
  a: 1


invalid_sequence_1.yaml:

.. code-block:: yaml
  b: b


invalid_sequence_3.yaml:

.. code-block:: yaml
  a: 1
  b: yâs
  c: 3


valid_sequence_2.yaml:

.. code-block:: yaml
  a: 1
  c: 3


valid_sequence_1.yaml:

.. code-block:: yaml
  â: 1
  b: 2

.. code-block:: python

    from strictyaml import MapPattern, Int, Str, YAMLValidationError, load
    
    schema = MapPattern(Str(), Int())



.. code-block:: python

    load(valid_sequence_1, schema) == {u"â": 1, "b": 2}
    >>> True



.. code-block:: python

    load(valid_sequence_2, schema) == {"a": 1, "c": 3}
    >>> True



.. code-block:: python

    load(valid_sequence_3, schema) == {"a": 1, }
    >>> True



.. code-block:: python

    load(invalid_sequence_1, schema)
    >>> EXCEPTION RAISED:
      when expecting an integer
      found non-integer
        in "<unicode string>", line 1, column 1:
          b: b
           ^



.. code-block:: python

    load(invalid_sequence_2, schema)
    >>> EXCEPTION RAISED:
      when expecting an integer
      found non-integer
        in "<unicode string>", line 1, column 1:
          a: a
           ^



.. code-block:: python

    load(invalid_sequence_3, schema)
    >>> EXCEPTION RAISED:
      when expecting an integer
      found non-integer
        in "<unicode string>", line 2, column 1:
          b: "y\xE2s"
          ^


Page automatically generated by hitchdoc from:
  hitch/mappattern.story