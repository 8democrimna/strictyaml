Non-schema validation
---------------------

When using strictyaml you do not have to specify a schema. If
you do this, the validator "Any" is used which will accept any
mapping and any list and any value (which will always be interpreted
as a string).

This is recommended when rapidly prototyping and the schema is
still fluid. When your prototype code is parsing YAML
that has a more fixed structure, we recommend that you lock it
down with a schema.

The Any validator can be used inside fixed structures as well.



valid_sequence.yaml:

.. code-block:: yaml
  a:
    x: 9
    y: 8
  b: 2
  c: 3

.. code-block:: python

    from strictyaml import Any, MapPattern, load



.. code-block:: python

    load(valid_sequence) == {"a": {"x": "9", "y": "8"}, "b": "2", "c": "3"}
    >>> True

This is equivalent to the above statement

.. code-block:: python

    load(valid_sequence, Any()) == {"a": {"x": "9", "y": "8"}, "b": "2", "c": "3"}
    >>> True

You can fix the schema of higher levels of the YAML and not lower levels

.. code-block:: python

    load(valid_sequence, MapPattern(Any(), Any())) == {"a": {"x": "9", "y": "8"}, "b": "2", "c": "3"}
    >>> True


Page automatically generated by hitchdoc from:
  hitch/any.story