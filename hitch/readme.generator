# First pass at something resembling a readme generator

vars:
  title: StrictYAML
  url: http://hitchdev.com/strictyaml
  intro: |
    StrictYAML is a `type-safe <https://en.wikipedia.org/wiki/Type_safety>`_ YAML parser
    that parses a
    `restricted subset <https://hitchdev.com/strictyaml/features-removed>`_
    of the YAML specificaton.

    Priorities:

    * Readability of YAML.
    * Ease of use of API.
    * Secure by default, strict validation of markup and straightforward type casting.
    * Clear, readable exceptions with code snippets and line numbers.
    * Acting as a near-drop in replacement for pyyaml, ruamel.yaml or poyo.
    * Ability to read in (commented) YAML and write it out again with comments preserved.
    * Letting you worry about more interesting things than parsing or writing config files.
    * *Not* speed, currently, although if writing optimized C is your thing, please help.
template: |
  {{ title }}
  {{ "-" * title|length }}
  
  {{ intro }}
  
  {{ quickstart_without_schema }}
  
  {{ quickstart_with_schema }}
  
  Install It
  ----------

  .. code-block:: sh

    $ pip install strictyaml
  
  
  Why not X instead?
  ------------------
  
  {% for link in why_not -%}
  * `{{ link['name'] }} <{{ url }}/why-not/{{ link['slug'] }}>`_
  {% endfor %}
  
  
  Why?
  ----
  
  {% for link in why -%}
  * `{{ link['name'] }} <{{ url }}/why/{{ link['slug'] }}>`_
  {% endfor %}
  
  Breaking changes
  ----------------

  0.5: Data is now parsed by default as a YAML object instead of directly to dict/list. To get dict/list and ordinary values as before, get yaml_object.data.

  Contributors
  ------------

  * @gvx
  * @AlexandreDecan
  * @lots0logs
  * @tobbez

