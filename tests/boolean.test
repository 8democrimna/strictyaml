{% for ruamel_version in ruamel_versions %}
{% for python_version in python_versions %}
- name: Boolean validation
  description: |
    Boolean values can be interpreted using a Bool
    validator. It case-insensitively interprets
    "yes", "true", "1", "on" as True and their
    opposites as False.
    
    Any values that are not among the above
    will cause a validation error.
  preconditions:
    python_version: {{ python_version }}
    ruamel version: {{ ruamel_version }}
    files:
      valid_sequence.yaml: |
        a: yes
        b: true
        c: on
        d: 1
        e: 0
        f: Off
        g: FALSE
        h: no
      invalid_sequence.yaml: |
        a: y√¢s
  tags:
    - scalar
    - bool
    - py{{ python_version }}
  scenario:
    - Run command: |
        from strictyaml import Bool, Str, MapPattern, YAMLValidationError, load

        schema = MapPattern(Str(), Bool())

    - Assert True: 'load(valid_sequence, schema)["a"] == True'

    - Assert True: 'load(valid_sequence, schema)["a"].value is True'

    - Assert True: 'load(valid_sequence, schema)["g"].text == "FALSE"'

    - Assert Exception:
        command: str(load(valid_sequence, schema)["g"])
        exception: Cannot cast

    - Assert Exception:
        command: load(invalid_sequence, schema)
        exception: |
          when expecting a boolean value (one of "yes", "true", "on", "1", "no", "false", "off", "0")
          found non-boolean
            in "<unicode string>", line 1, column 1:
              a: "y\xE2s"
               ^ (line: 1)
{% endfor %}
{% endfor %}
