{% for ruamel_version in ruamel_versions %}
{% for python_version in python_versions %}
- name: Optional validation
  preconditions:
    python_version: {{ python_version }}
    ruamel version: {{ ruamel_version }}
    files:
      valid_sequence_1.yaml: |
        a: 1
        b: 2
      valid_sequence_2.yaml: |
        a: 1
        c: 3
      valid_sequence_3.yaml: |
        a: 1
      invalid_sequence_1.yaml: |
        b: b
      invalid_sequence_2.yaml: |
        a: a
        b: 2
      invalid_sequence_3.yaml: |
        a: 1
        b: yes
        c: 3
  tags:
    - sequence
    - py{{ python_version }}
  scenario:
    - Run command: |
        from strictyaml import MapPattern, Int, Str, YAMLValidationError, load

        schema = MapPattern(Str(), Int())

        try:
            load(invalid_sequence_1, schema)
        except YAMLValidationError as error:
            seq1_error = error

        try:
            load(invalid_sequence_2, schema)
        except YAMLValidationError as error:
            seq2_error = error

        try:
            load(invalid_sequence_3, schema)
        except YAMLValidationError as error:
            seq3_error = error
    - Assert True: 'load(valid_sequence_1, schema) == {"a": 1, "b": 2}'
    - Assert True: 'load(valid_sequence_2, schema) == {"a": 1, "c": 3}'
    - Assert True: 'load(valid_sequence_3, schema) == {"a": 1, }'
    - Assert True: seq1_error.start_line == 1
    - Assert True: seq1_error.end_line == 1
    - Assert True: seq2_error.start_line == 1
    - Assert True: seq2_error.end_line == 1
    - Assert True: seq3_error.start_line == 2
    - Assert True: seq3_error.end_line == 2
{% endfor %}
{% endfor %}