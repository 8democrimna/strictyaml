{% for python_version in python_versions %}
- name: Sequence validation
  preconditions:
    python_version: {{ python_version }}
    files:
      valid_sequence.yaml: |
        a: 1
        b: yes
        c: string
        d: 3.141
        e: 3.1415926535
      invalid_sequence_1.yaml: |
        a: 1
        b: 2
        c: string
        d: 3.141
        e: 3.1415926535
      invalid_sequence_2.yaml: |
        a: string
        b: 2
        c: string
        d: 3.141
        e: 3.1415926535
  tags:
    - sequence
    - py{{ python_version }}
  scenario:
    - Run command: |
        from strictyaml import Map, Int, Bool, Float, Str, Decimal, YAMLValidationError, load
        import decimal

        schema = Map({"a": Int(), "b": Bool(), "c": Str(), "d": Float(), "e": Decimal()})

        try:
            load(invalid_sequence_1, schema)
        except YAMLValidationError as error:
            seq1_error = error


        try:
            load(invalid_sequence_2, schema)
        except YAMLValidationError as error:
            seq2_error = error

    - Assert True: 'load(valid_sequence, schema) == {"a": 1, "b": True, "c": "string", "d": 3.141, "e": decimal.Decimal("3.1415926535")}'
    - Assert True: seq1_error.start_line == 2
    - Assert True: seq1_error.end_line == 2
    - Assert True: seq2_error.start_line == 1
    - Assert True: seq2_error.end_line == 1
{% endfor %}